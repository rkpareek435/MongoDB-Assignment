{

"address": {

"building": "1007",

"coord": [ -73.856077, 40.848447 ],

"street": "Mall Road Mussorrie",

"zipcode": "10462"

},

"cuisine": "Bakery",

"grades": [

{ "date": { "$date": 1393804800000 }, "grade": "A", "score": 2 },

{ "date": { "$date": 1378857600000 }, "grade": "A", "score": 6 },

{ "date": { "$date": 1358985600000 }, "grade": "A", "score": 10 },

{ "date": { "$date": 1322006400000 }, "grade": "A", "score": 9 },

{ "date": { "$date": 1299715200000 }, "grade": "B", "score": 14 }

],

"name": "Morris Bake Shop",

"restaurant_id": "30075445"

}



Q-1: Write a MongoDB query to display the fields restaurant_id, name, and zip code but exclude the field _id for all the documents in the collection restaurant.

Ans  db.rest.find({}, {_id:1, name:1, cuisine: 1, borough: 1, restaurant_id: 1})


Q-2: Write a MongoDB query to arrange the name of the restaurants in ascending order along with all the columns.

Ans db.rest.find().sort({"name":1});

Q-3: Write a MongoDB query to display the first 5 restaurant in ascending order of name field.

Ans db.rest.find({},{_id:0}).sort({name:1}).limit(5).pretty()

Q-4: Write a MongoDB query to display the next 5 restaurants after skipping first 5.

Ans db.rest.find({"borough" : "Bronx"}).skip(5).limit(5)

Q-5: Write a MongoDB query to find the restaurants who achieved a score more than 90.

Ans db.rest.find({"grades.score" : {"$gt" : 90}})

Q-6: Write a MongoDB query to find the restaurants that achieved a score, more than 80 but less than 100.

Ans db.rest.find({$and : [{"grades.score" : {"$gt" : 90}},{"grades.score" : {"$lt" : 100}}]})

Q-7: Write a MongoDB query to find the restaurant name, longitude and latitude and cuisine for those restaurants which contain 'Caf' as first three letters of its name.

Ans   db.rest.find(
                   { name : 
                     { $regex : /^Caf/i, } 
                   },
                       {
                         "name":1,
                         "address.coord":1,
                         "cuisine" :1
                        }
                   );

Q-8: Write a MongoDb query to update grade B to A in all documents.

Ans $db.rest.update({"grade": "A"}, {$set: {"grade": "B"}}, { multi: true} )